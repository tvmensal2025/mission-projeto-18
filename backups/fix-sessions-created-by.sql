-- ===============================================
-- üîß CORRE√á√ÉO COLUNA CREATED_BY NA TABELA SESSIONS
-- ===============================================

-- 1. VERIFICAR COLUNAS ATUAIS
SELECT 
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns 
WHERE table_name = 'sessions' 
AND table_schema = 'public'
ORDER BY ordinal_position;

-- 2. ADICIONAR COLUNA CREATED_BY SE N√ÉO EXISTIR
DO $$
BEGIN
    -- Verificar se coluna created_by existe
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'created_by' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN created_by UUID REFERENCES auth.users(id) ON DELETE SET NULL;
        RAISE NOTICE '‚úÖ Coluna created_by adicionada √† public.sessions';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Coluna created_by j√° existe na public.sessions';
    END IF;
END $$;

-- 3. ADICIONAR OUTRAS COLUNAS QUE PODEM ESTAR FALTANDO
DO $$
BEGIN
    -- Adicionar template_id se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'template_id' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN template_id TEXT;
        RAISE NOTICE '‚úÖ Coluna template_id adicionada √† public.sessions';
    END IF;

    -- Adicionar is_template se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'is_template' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN is_template BOOLEAN DEFAULT false;
        RAISE NOTICE '‚úÖ Coluna is_template adicionada √† public.sessions';
    END IF;

    -- Adicionar template_category se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'template_category' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN template_category TEXT;
        RAISE NOTICE '‚úÖ Coluna template_category adicionada √† public.sessions';
    END IF;

    -- Adicionar objectives se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'objectives' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN objectives TEXT[];
        RAISE NOTICE '‚úÖ Coluna objectives adicionada √† public.sessions';
    END IF;

    -- Adicionar prerequisites se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'prerequisites' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN prerequisites TEXT[];
        RAISE NOTICE '‚úÖ Coluna prerequisites adicionada √† public.sessions';
    END IF;

    -- Adicionar materials_needed se n√£o existir
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'materials_needed' 
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE public.sessions ADD COLUMN materials_needed TEXT[];
        RAISE NOTICE '‚úÖ Coluna materials_needed adicionada √† public.sessions';
    END IF;
END $$;

-- 4. ATUALIZAR REGISTROS EXISTENTES COM CREATED_BY
UPDATE public.sessions 
SET created_by = user_id 
WHERE created_by IS NULL AND user_id IS NOT NULL;

-- 5. ATUALIZAR POL√çTICAS RLS PARA INCLUIR CREATED_BY
-- Pol√≠tica de SELECT atualizada
DROP POLICY IF EXISTS "sessions_select_policy" ON public.sessions;
CREATE POLICY "sessions_select_policy" ON public.sessions 
FOR SELECT USING (
    is_published = true OR 
    user_id = auth.uid() OR 
    created_by = auth.uid() OR
    EXISTS (
        SELECT 1 FROM public.profiles 
        WHERE id = auth.uid() AND role = 'admin'
    )
);

-- Pol√≠tica de UPDATE atualizada
DROP POLICY IF EXISTS "sessions_update_policy" ON public.sessions;
CREATE POLICY "sessions_update_policy" ON public.sessions 
FOR UPDATE USING (
    user_id = auth.uid() OR 
    created_by = auth.uid() OR
    EXISTS (
        SELECT 1 FROM public.profiles 
        WHERE id = auth.uid() AND role = 'admin'
    )
);

-- Pol√≠tica de DELETE atualizada
DROP POLICY IF EXISTS "sessions_delete_policy" ON public.sessions;
CREATE POLICY "sessions_delete_policy" ON public.sessions 
FOR DELETE USING (
    user_id = auth.uid() OR 
    created_by = auth.uid() OR
    EXISTS (
        SELECT 1 FROM public.profiles 
        WHERE id = auth.uid() AND role = 'admin'
    )
);

-- 6. CRIAR √çNDICE PARA CREATED_BY
CREATE INDEX IF NOT EXISTS idx_sessions_created_by ON public.sessions(created_by);

-- 7. INSERIR TEMPLATES DE EXEMPLO (se n√£o existirem)
INSERT INTO public.sessions (
    title, description, content, session_type, difficulty, duration_minutes, 
    category, template_category, is_template, objectives, prerequisites, 
    materials_needed, is_published, user_id, created_by
) 
SELECT * FROM (VALUES
    ('Template: Medita√ß√£o Guiada', 
     'Template para criar sess√µes de medita√ß√£o guiada personalizadas.',
     '{"type": "meditation", "steps": ["Prepara√ß√£o", "Respira√ß√£o", "Visualiza√ß√£o", "Encerramento"], "customizable_fields": ["duration", "theme", "background_music"]}',
     'meditation', 'iniciante', 15, 'Mindfulness', 'Medita√ß√£o', true,
     ARRAY['Reduzir estresse', 'Melhorar foco', 'Promover relaxamento'],
     ARRAY['Ambiente silencioso', 'Posi√ß√£o confort√°vel'],
     ARRAY['Almofada ou cadeira', 'Fones de ouvido (opcional)'],
     true, (SELECT id FROM auth.users LIMIT 1), (SELECT id FROM auth.users LIMIT 1)),

    ('Template: Sess√£o de Terapia', 
     'Template para criar sess√µes terap√™uticas estruturadas.',
     '{"type": "therapy", "phases": ["Acolhimento", "Explora√ß√£o", "Interven√ß√£o", "Fechamento"], "techniques": ["escuta_ativa", "reflexao", "questionamento_socratico"]}',
     'therapy', 'medio', 50, 'Terapia', 'Psicoterapia', true,
     ARRAY['Autoconhecimento', 'Resolu√ß√£o de conflitos', 'Desenvolvimento pessoal'],
     ARRAY['Disposi√ß√£o para autoexplora√ß√£o'],
     ARRAY['Caderno para anota√ß√µes', 'Ambiente privado'],
     true, (SELECT id FROM auth.users LIMIT 1), (SELECT id FROM auth.users LIMIT 1)),

    ('Template: Exerc√≠cio Funcional', 
     'Template para criar treinos funcionais personalizados.',
     '{"type": "exercise", "structure": ["Aquecimento", "Exerc√≠cios principais", "Relaxamento"], "equipment": ["peso_corporal", "halteres", "elasticos"]}',
     'exercise', 'medio', 30, 'Fitness', 'Exerc√≠cio', true,
     ARRAY['Melhorar condicionamento', 'Fortalecer m√∫sculos', 'Aumentar flexibilidade'],
     ARRAY['Libera√ß√£o m√©dica', 'Conhecimento b√°sico de exerc√≠cios'],
     ARRAY['Roupas adequadas', '√Ågua', 'Toalha'],
     true, (SELECT id FROM auth.users LIMIT 1), (SELECT id FROM auth.users LIMIT 1))
) AS templates_data
WHERE NOT EXISTS (
    SELECT 1 FROM public.sessions WHERE is_template = true
);

-- 8. VERIFICA√á√ïES FINAIS
SELECT 
    'COLUNAS SESSIONS' as status,
    COUNT(*) as total_colunas
FROM information_schema.columns 
WHERE table_name = 'sessions' AND table_schema = 'public';

SELECT 
    'VERIFICA√á√ÉO CREATED_BY' as status,
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'sessions' 
        AND column_name = 'created_by' 
        AND table_schema = 'public'
    ) THEN '‚úÖ EXISTE' ELSE '‚ùå N√ÉO EXISTE' END as coluna_created_by;

SELECT 
    'SESS√ïES E TEMPLATES' as status,
    COUNT(*) as total_sessoes,
    COUNT(*) FILTER (WHERE is_template = true) as templates,
    COUNT(*) FILTER (WHERE is_template = false OR is_template IS NULL) as sessoes_normais
FROM public.sessions;

-- 9. MOSTRAR ESTRUTURA FINAL
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_name = 'sessions' 
AND table_schema = 'public'
AND column_name IN ('id', 'title', 'content', 'created_by', 'user_id', 'is_template', 'template_category')
ORDER BY ordinal_position;

-- 10. RESULTADO FINAL
SELECT '‚úÖ COLUNA CREATED_BY ADICIONADA COM SUCESSO!' as resultado;
SELECT 'üìã TEMPLATES DE EXEMPLO INSERIDOS!' as templates;
SELECT 'üéØ AGORA TESTE CRIAR SESS√ÉO USANDO TEMPLATE!' as instrucao;